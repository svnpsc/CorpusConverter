//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.03.15 at 01:54:55 PM MEZ 
//
// Based on the XML schmema: TigerXMLSubcorpus.xsd
// Reference: http://www.coli.uni-saarland.de/projects/salsa/
//


package tigerxml;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlIDREF;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for graphType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="graphType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="terminals" type="{}terminalsType"/>
 *         &lt;element name="nonterminals" type="{}nonterminalsType"/>
 *       &lt;/sequence>
 *       &lt;attribute name="root" use="required" type="{}idrefType" />
 *       &lt;attribute name="discontinuous" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "graphType", propOrder = {
    "terminals",
    "nonterminals"
})
public class Graph {

    @XmlElement(required = true)
    protected Terminals terminals = new Terminals();
    @XmlElement(required = true)
    protected Nonterminals nonterminals = new Nonterminals();
    @XmlAttribute(required = true)
    @XmlIDREF
    protected Object root;
    @XmlAttribute
    protected Boolean discontinuous;

    /**
     * Gets the value of the terminals property.
     * 
     * @return
     *     possible object is
     *     {@link Terminals }
     *     
     */
    public Terminals getTerminals() {
        return terminals;
    }

    /**
     * Sets the value of the terminals property.
     * 
     * @param value
     *     allowed object is
     *     {@link Terminals }
     *     
     */
    public void setTerminals(Terminals value) {
        this.terminals = value;
    }

    /**
     * Gets the value of the nonterminals property.
     * 
     * @return
     *     possible object is
     *     {@link Nonterminals }
     *     
     */
    public Nonterminals getNonterminals() {
        return nonterminals;
    }

    /**
     * Sets the value of the nonterminals property.
     * 
     * @param value
     *     allowed object is
     *     {@link Nonterminals }
     *     
     */
    public void setNonterminals(Nonterminals value) {
        this.nonterminals = value;
    }

    /**
     * Gets the value of the root property.
     * 
     * @return
     *     possible object is
     *     {@link Object }
     *     
     */
    public Object getRoot() {
        return root;
    }

    /**
     * Sets the value of the root property.
     * 
     * @param value
     *     allowed object is
     *     {@link Object }
     *     
     */
    public void setRoot(Object value) {
        this.root = value;
    }

    /**
     * Gets the value of the discontinuous property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isDiscontinuous() {
        if (discontinuous == null) {
            return false;
        } else {
            return discontinuous;
        }
    }

    /**
     * Sets the value of the discontinuous property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setDiscontinuous(Boolean value) {
        this.discontinuous = value;
    }

	public void addTerminal(T terminal) {
		terminals.addTerminal(terminal);
	}

	public void addNonterminal(Nt nonterminal) {
		nonterminals.addNonterminal(nonterminal);
	}
}
